@model SearchComplaintActionsViewModel

@{
    ViewData["Title"] = "Complaint Actions Search";
    string rowclass = "";
    string selectText = "(any)";

    string typeColAria = "";
    string actionDateColAria = "";
    string complaintIdColAria = "";

    switch (Model.Sort)
    {
        case SearchComplaintActionsViewModel.SortBy.ActionTypeAsc:
            typeColAria = "aria-sort=ascending";
            break;
        case SearchComplaintActionsViewModel.SortBy.ActionTypeDesc:
            typeColAria = "aria-sort=descending";
            break;
        case SearchComplaintActionsViewModel.SortBy.ActionDateAsc:
            actionDateColAria = "aria-sort=ascending";
            break;
        case SearchComplaintActionsViewModel.SortBy.ActionDateDesc:
            actionDateColAria = "aria-sort=descending";
            break;
        case SearchComplaintActionsViewModel.SortBy.ComplaintIdAsc:
            complaintIdColAria = "aria-sort=ascending";
            break;
        case SearchComplaintActionsViewModel.SortBy.ComplaintIdDesc:
            complaintIdColAria = "aria-sort=descending";
            break;
    }
}

<h1>@ViewData["Title"]</h1>

<form method="get" class="usa-grid usa-section usa-section-light" asp-fragment="search-results">
    <fieldset>
        <legend>Action</legend>
        <div class="usa-width-one-half">
            @Html.LabelFor(m => m.ActionType)
            @Html.DropDownListFor(m => m.ActionType, Model.ActionTypesSelectList, selectText)
            @if (Model.IncludeDeleted)
            {
                @Html.LabelFor(m => m.DeleteStatus)
                @Html.DropDownListFor(m => m.DeleteStatus, Html.GetEnumSelectList(typeof(SearchComplaintActionsViewModel.SearchDeleteStatus)), "Not Deleted")
            }
        </div>
        <div class="usa-width-one-fourth">
            @Html.LabelFor(m => m.ActionDateFrom)
            @Html.EditorFor(m => m.ActionDateFrom, new { htmlAttributes = new { @class = "datepicker" } })
        </div>
        <div class="usa-width-one-fourth">
            @Html.LabelFor(m => m.ActionDateTo)
            @Html.EditorFor(m => m.ActionDateTo, new { htmlAttributes = new { @class = "datepicker" } })
        </div>
    </fieldset>

    <fieldset>
        <legend>Entry</legend>
        <div class="usa-width-one-half">
            @Html.LabelFor(m => m.EnteredBy)
            @Html.DropDownListFor(m => m.EnteredBy, Model.AllUsersSelectList, selectText)
        </div>
        <div class="usa-width-one-fourth">
            @Html.LabelFor(m => m.DateEnteredFrom)
            @Html.EditorFor(m => m.DateEnteredFrom, new { htmlAttributes = new { @class = "datepicker" } })
        </div>
        <div class="usa-width-one-fourth">
            @Html.LabelFor(m => m.DateEnteredTo)
            @Html.EditorFor(m => m.DateEnteredTo, new { htmlAttributes = new { @class = "datepicker" } })
        </div>
    </fieldset>

    <fieldset>
        <legend>Details</legend>
        <div class="usa-width-one-half">
            @Html.LabelFor(m => m.Investigator)
            @Html.EditorFor(m => m.Investigator)
        </div>
        <div class="usa-width-one-half">
            @Html.LabelFor(m => m.Comments)
            @Html.EditorFor(m => m.Comments)
        </div>
    </fieldset>

    <div class="gaepd-buttonrow">
        <button type="submit" id="submit" name="submit" value="search">Search</button>
        <a asp-action="Index" class="usa-button usa-button-outline">Clear search form</a>
    </div>
</form>

@if (Model.ComplaintActions != null)
{
    <table class="usa-table-borderless gaepd-table-responsive">
        <caption id="search-results">
            @if (Model.ComplaintActions.TotalItems == 0)
            {
                <text>No results found</text>
            }
            else if (Model.ComplaintActions.TotalItems == 1)
            {
                <text>One result</text>
            }
            else
            {
                @Model.ComplaintActions.TotalItems.ToString("N0")<text> total results; showing results </text> @Model.ComplaintActions.FirstItemIndex.ToString("N0")<text> â€“ </text>@Model.ComplaintActions.LastItemIndex.ToString("N0")
            }
        </caption>
        <thead>
            <tr>
                <th scope="col" class="gaepd-sortable" data-label="Sort by" @complaintIdColAria>
                    <a asp-route-submit="Sort"
                       asp-route-sort="@Model.ComplaintIdSortAction"
                       asp-route-deleteStatus="@(Model.DeleteStatus.ToString())"
                       asp-route-ActionDateFrom="@(String.Format(CTS.FormatDateEdit, Model.ActionDateFrom))"
                       asp-route-ActionDateTo="@(String.Format(CTS.FormatDateEdit, Model.ActionDateTo))"
                       asp-route-ActionType="@(Model.ActionType)"
                       asp-route-Investigator="@(Model.Investigator)"
                       asp-route-DateEnteredFrom="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredFrom))"
                       asp-route-DateEnteredTo="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredTo))"
                       asp-route-EnteredBy="@(Model.EnteredBy)"
                       asp-route-Comments="@(Model.Comments)"
                       asp-fragment="search-results">
                        @Html.DisplayNameFor(model => model.ComplaintActions.FirstOrDefault().ComplaintId)
                    </a>
                </th>
                <th scope="col" class="gaepd-sortable" data-label="Sort by" @typeColAria>
                    <a asp-route-submit="Sort"
                       asp-route-sort="@Model.TypeSortAction"
                       asp-route-deleteStatus="@(Model.DeleteStatus.ToString())"
                       asp-route-ActionDateFrom="@(String.Format(CTS.FormatDateEdit, Model.ActionDateFrom))"
                       asp-route-ActionDateTo="@(String.Format(CTS.FormatDateEdit, Model.ActionDateTo))"
                       asp-route-ActionType="@(Model.ActionType)"
                       asp-route-Investigator="@(Model.Investigator)"
                       asp-route-DateEnteredFrom="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredFrom))"
                       asp-route-DateEnteredTo="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredTo))"
                       asp-route-EnteredBy="@(Model.EnteredBy)"
                       asp-route-Comments="@(Model.Comments)"
                       asp-fragment="search-results">
                        @Html.DisplayNameFor(model => model.ComplaintActions.FirstOrDefault().ActionType)
                    </a>
                </th>
                <th scope="col" class="gaepd-sortable" data-label="Sort by" @actionDateColAria>
                    <a asp-route-submit="Sort"
                       asp-route-sort="@Model.DateSortAction"
                       asp-route-deleteStatus="@(Model.DeleteStatus.ToString())"
                       asp-route-ActionDateFrom="@(String.Format(CTS.FormatDateEdit, Model.ActionDateFrom))"
                       asp-route-ActionDateTo="@(String.Format(CTS.FormatDateEdit, Model.ActionDateTo))"
                       asp-route-ActionType="@(Model.ActionType)"
                       asp-route-Investigator="@(Model.Investigator)"
                       asp-route-DateEnteredFrom="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredFrom))"
                       asp-route-DateEnteredTo="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredTo))"
                       asp-route-EnteredBy="@(Model.EnteredBy)"
                       asp-route-Comments="@(Model.Comments)"
                       asp-fragment="search-results">
                        @Html.DisplayNameFor(model => model.ComplaintActions.FirstOrDefault().ActionDate)
                    </a>
                </th>
                <th scope="col">@Html.DisplayNameFor(m => m.ComplaintActions.FirstOrDefault().Investigator)</th>
                <th scope="col">@Html.DisplayNameFor(m => m.ComplaintActions.FirstOrDefault().EnteredBy)</th>
                <th scope="col">@Html.DisplayNameFor(m => m.ComplaintActions.FirstOrDefault().Comments)</th>
                @if (Model.IncludeDeleted)
                {
                    <th scope="col">@Html.DisplayNameFor(m => m.ComplaintActions.FirstOrDefault().Deleted)</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ComplaintActions)
            {
                rowclass = "";
                if (item.Deleted)
                {
                    rowclass = "gaepd-tablerow-dimmed";
                }
                <tr class="@rowclass">
                    <th scope="row" data-label="@Html.DisplayNameFor(m => item.ComplaintId)">
                        <a class="usa-button usa-button-outline" asp-controller="Complaints" asp-action="Details" asp-route-id="@item.ComplaintId">@Html.DisplayFor(m => item.ComplaintId)</a>
                    </th>
                    <td data-label="@Html.DisplayNameFor(m => item.ActionType)">@Html.DisplayFor(m => item.ActionType.Name)</td>
                    <td data-label="@Html.DisplayNameFor(m => item.ActionDate)">@Html.DisplayFor(m => item.ActionDate)</td>
                    <td data-label="@Html.DisplayNameFor(m => item.Investigator)">@Html.DisplayFor(m => item.Investigator)</td>
                    <td data-label="@Html.DisplayNameFor(m => item.EnteredBy)">@Html.DisplayFor(m => item.EnteredBy.SortableFullName)</td>
                    <td data-label="@Html.DisplayNameFor(m => item.Comments)">@Html.DisplayFor(m => item.Comments)</td>
                    @if (Model.IncludeDeleted)
                    {
                        <td data-label="@Html.DisplayNameFor(m => item.Deleted)">@Html.DisplayFor(m => item.Deleted)</td>
                    }
                </tr>
            }
        </tbody>
    </table>

    @if (Model.ComplaintActions.TotalItems > CTS.PageSize)
    {
        <div class="gaepd-pagination">
            @{
                var pagBegin = Math.Max(1, Math.Min(Model.ComplaintActions.PageIndex - 2, Model.ComplaintActions.TotalPages - 4));
                var pagEnd = Math.Min(Model.ComplaintActions.TotalPages, Math.Max(Model.ComplaintActions.PageIndex + 2, 5));
            }

            @if (Model.ComplaintActions.HasPreviousPage)
            {
                <a asp-route-submit="Page"
                   asp-route-page="1"
                   asp-route-sort="@Model.Sort"
                   asp-route-deleteStatus="@(Model.DeleteStatus.ToString())"
                   asp-route-ActionDateFrom="@(String.Format(CTS.FormatDateEdit, Model.ActionDateFrom))"
                   asp-route-ActionDateTo="@(String.Format(CTS.FormatDateEdit, Model.ActionDateTo))"
                   asp-route-ActionType="@(Model.ActionType)"
                   asp-route-Investigator="@(Model.Investigator)"
                   asp-route-DateEnteredFrom="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredFrom))"
                   asp-route-DateEnteredTo="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredTo))"
                   asp-route-EnteredBy="@(Model.EnteredBy)"
                   asp-route-Comments="@(Model.Comments)"
                   asp-fragment="search-results"
                   class="gaepd-pagination-first">
                    First
                </a>
                <a asp-route-submit="Page"
                   asp-route-page="@(Model.ComplaintActions.PageIndex - 1)"
                   asp-route-sort="@Model.Sort"
                   asp-route-deleteStatus="@(Model.DeleteStatus.ToString())"
                   asp-route-ActionDateFrom="@(String.Format(CTS.FormatDateEdit, Model.ActionDateFrom))"
                   asp-route-ActionDateTo="@(String.Format(CTS.FormatDateEdit, Model.ActionDateTo))"
                   asp-route-ActionType="@(Model.ActionType)"
                   asp-route-Investigator="@(Model.Investigator)"
                   asp-route-DateEnteredFrom="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredFrom))"
                   asp-route-DateEnteredTo="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredTo))"
                   asp-route-EnteredBy="@(Model.EnteredBy)"
                   asp-route-Comments="@(Model.Comments)"
                   asp-fragment="search-results"
                   class="gaepd-pagination-prev">
                    Previous
                </a>
            }
            else
            {
                <span class="gaepd-pagination-first gaepd-pagination-disabled" title="First">First</span>
                <span class="gaepd-pagination-prev gaepd-pagination-disabled" title="Previous">Prev</span>
            }

            <div class="gaepd-pagination-inner">
                @if (pagBegin > 1)
                {
                    <span>â€¦</span>
                }

                @for (var i = pagBegin; i <= pagEnd; i++)
                {
                    var index = i;
                    <a asp-route-submit="Page"
                       asp-route-page="@index"
                       asp-route-sort="@Model.Sort"
                       asp-route-deleteStatus="@(Model.DeleteStatus.ToString())"
                       asp-route-ActionDateFrom="@(string.Format(CTS.FormatDateEdit, Model.ActionDateFrom))"
                       asp-route-ActionDateTo="@(string.Format(CTS.FormatDateEdit, Model.ActionDateTo))"
                       asp-route-ActionType="@(Model.ActionType)"
                       asp-route-Investigator="@(Model.Investigator)"
                       asp-route-DateEnteredFrom="@(string.Format(CTS.FormatDateEdit, Model.DateEnteredFrom))"
                       asp-route-DateEnteredTo="@(string.Format(CTS.FormatDateEdit, Model.DateEnteredTo))"
                       asp-route-EnteredBy="@(Model.EnteredBy)"
                       asp-route-Comments="@(Model.Comments)"
                       asp-fragment="search-results"
                       class="@(Model.ComplaintActions.PageIndex == index ? "gaepd-pagination-active" : "")">
                        @index
                    </a>
                }

                @if (pagEnd < Model.ComplaintActions.TotalPages)
                {
                    <span>â€¦</span>
                }
            </div>

            @if (Model.ComplaintActions.HasNextPage)
            {
                <a asp-route-submit="Page"
                   asp-route-page="@(Model.ComplaintActions.PageIndex + 1)"
                   asp-route-sort="@Model.Sort"
                   asp-route-deleteStatus="@(Model.DeleteStatus.ToString())"
                   asp-route-ActionDateFrom="@(String.Format(CTS.FormatDateEdit, Model.ActionDateFrom))"
                   asp-route-ActionDateTo="@(String.Format(CTS.FormatDateEdit, Model.ActionDateTo))"
                   asp-route-ActionType="@(Model.ActionType)"
                   asp-route-Investigator="@(Model.Investigator)"
                   asp-route-DateEnteredFrom="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredFrom))"
                   asp-route-DateEnteredTo="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredTo))"
                   asp-route-EnteredBy="@(Model.EnteredBy)"
                   asp-route-Comments="@(Model.Comments)"
                   asp-fragment="search-results"
                   class="gaepd-pagination-next">
                    Next
                </a>
                <a asp-route-submit="Page"
                   asp-route-page="@(Model.ComplaintActions.TotalPages)"
                   asp-route-sort="@Model.Sort"
                   asp-route-deleteStatus="@(Model.DeleteStatus.ToString())"
                   asp-route-ActionDateFrom="@(String.Format(CTS.FormatDateEdit, Model.ActionDateFrom))"
                   asp-route-ActionDateTo="@(String.Format(CTS.FormatDateEdit, Model.ActionDateTo))"
                   asp-route-ActionType="@(Model.ActionType)"
                   asp-route-Investigator="@(Model.Investigator)"
                   asp-route-DateEnteredFrom="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredFrom))"
                   asp-route-DateEnteredTo="@(String.Format(CTS.FormatDateEdit, Model.DateEnteredTo))"
                   asp-route-EnteredBy="@(Model.EnteredBy)"
                   asp-route-Comments="@(Model.Comments)"
                   asp-fragment="search-results"
                   class="gaepd-pagination-last">
                    Last
                </a>
            }
            else
            {
                <span class="gaepd-pagination-next gaepd-pagination-disabled" title="Next">Next</span>
                <span class="gaepd-pagination-last gaepd-pagination-disabled" title="Last">Last</span>
            }
        </div>
    }
}

@section PageScripts {
    <script type="text/javascript">
        $(document).ready(function domReady() {
            // Set up date/time pickers
            $('.datepicker')
                .datepicker({
                    dateFormat: 'm-d-yy'
                })
                .attr("placeholder", "m-d-yyyy");

            // Don't submit empty form fields
            $('#submit').click(function OnSearchSubmit() {
                $('input').each(function (i) {
                    var $input = $(this);
                    if ($input.val() == '')
                        $input.attr('disabled', 'disabled');
                });
                $('select').each(function (i) {
                    var $input = $(this);
                    if ($input.val() == '')
                        $input.attr('disabled', 'disabled');
                });
            });
        });
    </script>
}
