@model ReturnComplaintViewModel

@{
    ViewData["Title"] = $"Return Complaint ID {Model.Id}";
}

<h1>@ViewData["Title"] to staff <em>(not approved)</em></h1>

<form asp-action="Return">
    <label asp-for="CurrentOfficeId"></label>
    <select asp-for="CurrentOfficeId" asp-items="Model.OfficesSelectList">
        <option value="">@CTS.SelectOfficeText</option>
    </select>
    <span asp-validation-for="CurrentOfficeId" class="usa-input-error-message"></span>

    <label asp-for="CurrentOwnerId"></label>
    @if (Model.DisableCurrentOwnerSelect)
    {
        <select asp-for="CurrentOwnerId" asp-items="Model.UsersInOfficeSelectList" disabled="disabled">
            <option value="">@CTS.SelectUserMasterText</option>
        </select>
    }
    else
    {
        <select asp-for="CurrentOwnerId" asp-items="Model.UsersInOfficeSelectList">
            <option value="">@CTS.SelectUserMasterText</option>
        </select>
    }
    <span asp-validation-for="CurrentOwnerId" class="usa-input-error-message"></span>

    <label asp-for="Comment"></label>
    <textarea asp-for="Comment"></textarea>
    <span asp-validation-for="Comment" class="usa-input-error-message"></span>

    <div class="gaepd-buttonrow">
        <button type="submit">Return</button>
        <a asp-action="Details" asp-route-id="@Model.Id" class="usa-button usa-button-outline">Cancel</a>
    </div>
</form>

@section PageScripts {
    <script asp-add-content-to-csp>
        $(function domReady() {
            // Make staff (owner) select hierarchical from Office select
            const OfficeIdSource = "#CurrentOfficeId";
            const OwnerIdDest = "#CurrentOwnerId";
            $(OfficeIdSource).change(function loadUsersList() {
                let items = "<option selected value=''>@CTS.SelectUserMasterText</option>";
                if ($(OfficeIdSource).val() !== "") {
                    const url = '@Url.Content("~/")' + "api/Users/ByOffice/" + $(OfficeIdSource).val();
                    $.getJSON(url, function processJsonResult(result) {
                        if (result == null || result.length === 0) {
                            $(OwnerIdDest).empty().html(items).prop('disabled', true);
                        } else {
                            $.each(result, function (i, item) {
                                items += "<option value='" + item.value + "'>" + item.text + "</option>";
                            });
                            $(OwnerIdDest).empty().html(items).prop('disabled', false);
                        }
                    }).fail(function errorHandler(jqXHR, statusText, errorThrown) {
                        const error = errorThrown instanceof Error ? errorThrown : new Error('Bad response from server: ' + jqXHR.responseText);
                        rg4js('send', {error: error, tags: ['jquery-ajax-handled']});
                        $(OwnerIdDest).empty().html("<option selected value=''>Error</option>").prop('disabled', true);
                    });
                } else {
                    $(OwnerIdDest).empty().html(items).prop('disabled', true);
                }
            });
        });
    </script>
}
