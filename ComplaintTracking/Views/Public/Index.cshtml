@model PublicSearchViewModel

@{
    ViewData["Public"] = "Public";
    ViewData["Title"] = "Public Complaint Search";
    string selectText = "(any)";

    string idColAria = "";
    string receivedDateColAria = "";

    switch (Model.Sort)
    {
        case PublicSearchViewModel.SortBy.IdAsc:
            idColAria = "aria-sort=ascending";
            break;
        case PublicSearchViewModel.SortBy.IdDesc:
            idColAria = "aria-sort=descending";
            break;
        case PublicSearchViewModel.SortBy.ReceivedDateAsc:
            receivedDateColAria = "aria-sort=ascending";
            break;
        case PublicSearchViewModel.SortBy.ReceivedDateDesc:
            receivedDateColAria = "aria-sort=descending";
            break;
    }
}

<h1>@ViewData["Title"]</h1>

<p>
    The Complaint Tracking System Public Inquiry Portal includes information for all complaints
    received by EPD from third parties after January 1, 1998, for which EPD’s investigation
    of the complaint has concluded.
</p>

<section class="usa-section usa-section-light usa-grid">
    <h2>Search by Complaint ID</h2>
    <form class="usa-search usa-search-big" asp-action="Index" asp-controller="Public">
        <div role="search">
            <label class="usa-sr-only" asp-for="FindComplaint">View Complaint ID</label>
            <input asp-for="FindComplaint" type="search" placeholder="Complaint ID" class="gaepd-input-medium-large" />
            <button type="submit"><span class="usa-search-submit-text">View</span></button>
        </div>
    </form>
</section>

<h2>Search by Complaint Details</h2>
<form method="get" class="usa-grid usa-section usa-section-light" asp-fragment="search-results">
    <fieldset>
        <legend>Date Received</legend>
        <div class="usa-width-one-half">
            @Html.LabelFor(m => m.DateFrom)
            @Html.EditorFor(m => m.DateFrom, new { htmlAttributes = new { @class = "datepicker" } })
        </div>
        <div class="usa-width-one-half">
            @Html.LabelFor(m => m.DateTo)
            @Html.EditorFor(m => m.DateTo, new { htmlAttributes = new { @class = "datepicker" } })
        </div>
    </fieldset>

    <fieldset>
        <legend>Complaint Details</legend>
        <div class="usa-width-one-half">
            @Html.LabelFor(m => m.TypeId)
            @Html.DropDownListFor(m => m.TypeId, Model.ConcernSelectList, selectText)

            @Html.LabelFor(m => m.SourceName)
            @Html.EditorFor(m => m.SourceName)
        </div>
        <div class="usa-width-one-half">
            @Html.LabelFor(m => m.Nature)
            @Html.EditorFor(m => m.Nature)
        </div>
    </fieldset>

    <fieldset>
        <legend>Location</legend>
        <div class="usa-width-one-half">
            @Html.LabelFor(m => m.Street)
            @Html.EditorFor(m => m.Street)

            @Html.LabelFor(m => m.City)
            @Html.EditorFor(m => m.City)
            <div>
                <div class="usa-input-grid usa-input-grid-medium">
                    @Html.LabelFor(m => m.StateId)
                    @Html.DropDownListFor(m => m.StateId, Model.StateSelectList, selectText)
                </div>
                <div class="usa-input-grid usa-input-grid-small">
                    @Html.LabelFor(m => m.PostalCode)
                    @Html.EditorFor(m => m.PostalCode)
                </div>
            </div>
        </div>
        <div class="usa-width-one-half">
            @Html.LabelFor(m => m.CountyId)
            @Html.DropDownListFor(m => m.CountyId, Model.CountySelectList, selectText)
        </div>
    </fieldset>

    <div class="gaepd-buttonrow">
        <button type="submit" id="submit" name="submit" value="search">Search</button>
        <a asp-action="Index" class="usa-button usa-button-outline">Clear search form</a>
    </div>
</form>

@if (Model.Complaints != null)
{
    <table class="usa-table-borderless gaepd-table-responsive">
        <caption id="search-results">
            @if (Model.Complaints.TotalItems == 0)
            {
                <text>No results found</text>
            }
            else if (Model.Complaints.TotalItems == 1)
            {
                <text>One result</text>
            }
            else
            {
                @Model.Complaints.TotalItems.ToString("N0")<text> total results; showing results </text> @Model.Complaints.FirstItemIndex.ToString("N0")<text> – </text>@Model.Complaints.LastItemIndex.ToString("N0")
            }
        </caption>
        <thead>
            <tr>
                <th scope="col" class="gaepd-sortable" data-label="Sort by" @idColAria>
                    <a asp-route-submit="Sort"
                       asp-route-sort="@Model.IdSortAction"
                       asp-route-DateFrom="@(String.Format(CTS.FormatDateEdit,Model.DateFrom))"
                       asp-route-DateTo="@(String.Format(CTS.FormatDateEdit,Model.DateTo))"
                       asp-route-Nature="@(Model.Nature)"
                       asp-route-CountyId="@(Model.CountyId)"
                       asp-route-TypeId="@(Model.TypeId)"
                       asp-route-SourceName="@(Model.SourceName)"
                       asp-route-Street="@(Model.Street)"
                       asp-route-City="@(Model.City)"
                       asp-route-StateId="@(Model.StateId)"
                       asp-route-PostalCode="@(Model.PostalCode)"
                       asp-fragment="search-results">
                        @Html.DisplayNameFor(model => model.Complaints.FirstOrDefault().ComplaintId)
                    </a>
                </th>
                <th scope="col" class="gaepd-sortable" data-label="Sort by" @receivedDateColAria>
                    <a asp-route-submit="Sort"
                       asp-route-sort="@Model.ReceivedDateSortAction"
                       asp-route-DateFrom="@(String.Format(CTS.FormatDateEdit,Model.DateFrom))"
                       asp-route-DateTo="@(String.Format(CTS.FormatDateEdit,Model.DateTo))"
                       asp-route-Nature="@(Model.Nature)"
                       asp-route-CountyId="@(Model.CountyId)"
                       asp-route-TypeId="@(Model.TypeId)"
                       asp-route-SourceName="@(Model.SourceName)"
                       asp-route-Street="@(Model.Street)"
                       asp-route-City="@(Model.City)"
                       asp-route-StateId="@(Model.StateId)"
                       asp-route-PostalCode="@(Model.PostalCode)"
                       asp-fragment="search-results">
                        @Html.DisplayNameFor(model => model.Complaints.FirstOrDefault().DateReceived)
                    </a>
                </th>
                <th scope="col">@Html.DisplayNameFor(m => m.Complaints.FirstOrDefault().SourceFacilityName)</th>
                <th scope="col">@Html.DisplayNameFor(m => m.Complaints.FirstOrDefault().CurrentOfficeName)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Complaints)
            {
                <tr>
                    <th scope="row" data-label="@Html.DisplayNameFor(m => item.ComplaintId)">
                        <a class="usa-button usa-button-outline" asp-action="ComplaintDetails" asp-route-id="@item.ComplaintId">@Html.DisplayFor(m => item.ComplaintId)</a>
                    </th>
                    <td data-label="@Html.DisplayNameFor(m => item.DateReceived)">@Html.DisplayFor(m => item.DateReceived)</td>
                    <td data-label="@Html.DisplayNameFor(m => item.SourceFacilityName)">
                        @if (string.IsNullOrEmpty(item.SourceFacilityName) && string.IsNullOrEmpty(item.SourceLocation))
                        {
                            @CTS.NotEnteredDisplayText
                        }
                        else
                        {
                            @Html.DisplayFor(m => item.SourceFacilityName)
                            @if (item.SourceLocation != null)
                            {
                                <br />@Html.DisplayFor(m => item.SourceLocation)
                            }
                        }
                    </td>
                    <td data-label="@Html.DisplayNameFor(m => item.CurrentOfficeName)">
                        @Html.DisplayFor(m => item.CurrentOfficeName)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model.Complaints.TotalItems > CTS.PageSize)
    {
        <div class="gaepd-pagination no-visited">
            @{
                var pagBegin = Math.Max(1, Math.Min(Model.Complaints.PageIndex - 2, Model.Complaints.TotalPages - 4));
                var pagEnd = Math.Min(Model.Complaints.TotalPages, Math.Max(Model.Complaints.PageIndex + 2, 5));
            }

            @if (Model.Complaints.HasPreviousPage)
            {
                <a asp-route-submit="Page"
                   asp-route-page="1"
                   asp-route-sort="@Model.Sort"
                   asp-route-DateFrom="@(String.Format(CTS.FormatDateEdit,Model.DateFrom))"
                   asp-route-DateTo="@(String.Format(CTS.FormatDateEdit,Model.DateTo))"
                   asp-route-Nature="@(Model.Nature)"
                   asp-route-CountyId="@(Model.CountyId)"
                   asp-route-TypeId="@(Model.TypeId)"
                   asp-route-SourceName="@(Model.SourceName)"
                   asp-route-Street="@(Model.Street)"
                   asp-route-City="@(Model.City)"
                   asp-route-StateId="@(Model.StateId)"
                   asp-route-PostalCode="@(Model.PostalCode)"
                   asp-fragment="search-results"
                   class="gaepd-pagination-first">
                    First
                </a>
                <a asp-route-submit="Page"
                   asp-route-page="@(Model.Complaints.PageIndex - 1)"
                   asp-route-sort="@Model.Sort"
                   asp-route-DateFrom="@(String.Format(CTS.FormatDateEdit,Model.DateFrom))"
                   asp-route-DateTo="@(String.Format(CTS.FormatDateEdit,Model.DateTo))"
                   asp-route-Nature="@(Model.Nature)"
                   asp-route-CountyId="@(Model.CountyId)"
                   asp-route-TypeId="@(Model.TypeId)"
                   asp-route-SourceName="@(Model.SourceName)"
                   asp-route-Street="@(Model.Street)"
                   asp-route-City="@(Model.City)"
                   asp-route-StateId="@(Model.StateId)"
                   asp-route-PostalCode="@(Model.PostalCode)"
                   asp-fragment="search-results"
                   class="gaepd-pagination-prev">
                    Previous
                </a>
            }
            else
            {
                <span class="gaepd-pagination-first gaepd-pagination-disabled" title="First">First</span>
                <span class="gaepd-pagination-prev gaepd-pagination-disabled" title="Previous">Prev</span>
            }

            <div class="gaepd-pagination-inner">
                @if (pagBegin > 1)
                {
                    <span>…</span>
                }

                @for (var i = pagBegin; i <= pagEnd; i++)
                {
                    var index = i;
                    <a asp-route-submit="Page"
                       asp-route-page="@index"
                       asp-route-sort="@Model.Sort"
                       asp-route-DateFrom="@(String.Format(CTS.FormatDateEdit,Model.DateFrom))"
                       asp-route-DateTo="@(String.Format(CTS.FormatDateEdit,Model.DateTo))"
                       asp-route-Nature="@(Model.Nature)"
                       asp-route-CountyId="@(Model.CountyId)"
                       asp-route-TypeId="@(Model.TypeId)"
                       asp-route-SourceName="@(Model.SourceName)"
                       asp-route-Street="@(Model.Street)"
                       asp-route-City="@(Model.City)"
                       asp-route-StateId="@(Model.StateId)"
                       asp-route-PostalCode="@(Model.PostalCode)"
                       asp-fragment="search-results"
                       class="@(Model.Complaints.PageIndex == index ? "gaepd-pagination-active" : "")">
                        @index
                    </a>
                }

                @if (pagEnd < Model.Complaints.TotalPages)
                {
                    <span>…</span>
                }
            </div>

            @if (Model.Complaints.HasNextPage)
            {
                <a asp-route-submit="Page"
                   asp-route-page="@(Model.Complaints.PageIndex + 1)"
                   asp-route-sort="@Model.Sort"
                   asp-route-DateFrom="@(String.Format(CTS.FormatDateEdit,Model.DateFrom))"
                   asp-route-DateTo="@(String.Format(CTS.FormatDateEdit,Model.DateTo))"
                   asp-route-Nature="@(Model.Nature)"
                   asp-route-CountyId="@(Model.CountyId)"
                   asp-route-TypeId="@(Model.TypeId)"
                   asp-route-SourceName="@(Model.SourceName)"
                   asp-route-Street="@(Model.Street)"
                   asp-route-City="@(Model.City)"
                   asp-route-StateId="@(Model.StateId)"
                   asp-route-PostalCode="@(Model.PostalCode)"
                   asp-fragment="search-results"
                   class="gaepd-pagination-next">
                    Next
                </a>
                <a asp-route-submit="Page"
                   asp-route-page="@(Model.Complaints.TotalPages)"
                   asp-route-sort="@Model.Sort"
                   asp-route-DateFrom="@(String.Format(CTS.FormatDateEdit,Model.DateFrom))"
                   asp-route-DateTo="@(String.Format(CTS.FormatDateEdit,Model.DateTo))"
                   asp-route-Nature="@(Model.Nature)"
                   asp-route-CountyId="@(Model.CountyId)"
                   asp-route-TypeId="@(Model.TypeId)"
                   asp-route-SourceName="@(Model.SourceName)"
                   asp-route-Street="@(Model.Street)"
                   asp-route-City="@(Model.City)"
                   asp-route-StateId="@(Model.StateId)"
                   asp-route-PostalCode="@(Model.PostalCode)"
                   asp-fragment="search-results"
                   class="gaepd-pagination-last">
                    Last
                </a>
            }
            else
            {
                <span class="gaepd-pagination-next gaepd-pagination-disabled" title="Next">Next</span>
                <span class="gaepd-pagination-last gaepd-pagination-disabled" title="Last">Last</span>
            }
        </div>
    }
}

@section PageScripts {
    <script type="text/javascript">
        $(document).ready(function domReady() {

            // Set up date/time pickers
            $('.datepicker')
                .datepicker({
                    dateFormat: 'm-d-yy'
                })
                .attr("placeholder", "m-d-yyyy");

            // Don't submit empty form fields
            $('#submit').click(function OnSearchSubmit() {
                $('input').each(function (i) {
                    var $input = $(this);
                    if ($input.val() == '')
                        $input.attr('disabled', 'disabled');
                });
                $('select').each(function (i) {
                    var $input = $(this);
                    if ($input.val() == '')
                        $input.attr('disabled', 'disabled');
                });
            });

        });
    </script>
}
